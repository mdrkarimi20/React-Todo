{"version":3,"sources":["Redux/Theme/actionTypes.js","Components/Header/Header.jsx","Redux/Theme/ThemeActions.js","Redux/ToDo/actionTypes.js","Components/Task/Task.jsx","Redux/ToDo/ToDoActions.js","Components/ToDo/ToDo.jsx","Components/AddTodo/AddTodo.jsx","Containers/Start/Start.jsx","Containers/NewFrom/NewForm.jsx","Containers/EditForm/EditForm.jsx","themes/theme.js","App.js","Redux/ToDo/ToDoReducer.js","Redux/Theme/ThemeReducer.js","Redux/rootReducer.js","Redux/store.js","index.js","assets/image/logo.png"],"names":["useStyle","makeStyles","items","display","justifyContent","item","flexDirection","alignItems","Header","paddingBottom","image","width","height","paddingTop","connect","state","darkMode","Theme","changeTheme","type","types","useSelector","ToDo","classes","data-aos","className","Card","Grid","container","xs","Box","src","logo","ToDoActionTypes","ADD_LIST","DELETE_LIST","UPDATE_LIST","CHECK_TASK","checkTask","listId","taskId","payload","title","done","ListItem","ListItemIcon","Checkbox","checked","onChange","ListItemText","deleteList","list","history","useState","open","setOpen","CardHeader","listTitle","action","IconButton","onClick","id","color","push","pathname","aria-label","Collapse","in","tasks","map","task","key","outline","AddTodo","to","Fab","Start","lists","CSSTransition","appear","classNames","timeout","List","root","marginTop","borderRadius","backgroundColor","fontFamily","form","backgroundImage","input","margin","link","textDecoration","button","flex","background","addList","newList","useHistory","setTitle","setTasks","TextField","label","variant","value","e","target","index","event","newTasks","taskChangeHandler","Button","uniqid","marginBottom","updateList","location","theme","createMuiTheme","spacing","palette","primary","main","secondary","error","info","overrides","MuiPaper","border","MuiTypography","colorTextSecondary","MuiContainer","padding","minHeight","position","MuiGrid","MuiInputBase","borderColor","MuiInputLabel","MuiFab","bottom","right","MuiIconButton","App","ThemeProvider","Container","exact","path","component","NewFrom","EditForm","INITIAL_STATE","username","ToDoReducer","currentState","SET_USERNAME","filter","ThemeReducer","rootReducer","combineReducers","middleWares","logger","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.172af294.chunk.js","sourcesContent":["export default {\r\n  CHANGE_THEME: \" CHANGE_THEME\",\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport logo from \"../../assets/image/logo.png\";\r\nimport { changeTheme } from \"../../Redux/Theme/ThemeActions\";\r\nimport \"./Header.scss\";\r\n\r\nconst useStyle = makeStyles({\r\n  items: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  item: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  Header: {\r\n    paddingBottom: \"1rem\",\r\n  },\r\n  image: {\r\n    width: \"10rem\",\r\n    height: \"8rem\",\r\n    paddingTop: \"1.2rem\",\r\n  },\r\n});\r\n\r\nfunction Header({ darkMode, changeTheme }) {\r\n  const ToDo = useSelector((state) => state.ToDo);\r\n\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <header data-aos={\"fade-left\"} className={classes.Header}>\r\n      <Card>\r\n        <Grid container className={classes.items}>\r\n          <Grid item className={classes.item} xs={4}>\r\n          </Grid>\r\n          <Grid item className={classes.item} xs={4}>\r\n            <Box justifyContent=\"center\" alignItems=\"center\">\r\n              <img src={logo} className={classes.image} />\r\n            </Box>\r\n            <h1 className=\"font\">React-Todo</h1>\r\n          </Grid>\r\n          <Grid item className={classes.item} xs={4}>\r\n            <Box justifyContent=\"center\">\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  darkMode: state.Theme.darkMode,\r\n});\r\n\r\nexport default connect(mapStateToProps, { changeTheme })(Header);\r\n","import types from \"./actionTypes\";\r\n\r\nexport const changeTheme = () => ({\r\n  type: types.CHANGE_THEME,\r\n});\r\n","const ToDoActionTypes = {\r\n    ADD_LIST: \"ADD_LIST\",\r\n    DELETE_LIST: \"DELETE_LIST\",\r\n    UPDATE_LIST: \"UPDATE_LIST\",\r\n    CHECK_TASK: \"CHECK_TASK\",\r\n};\r\n\r\nexport default ToDoActionTypes;","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { checkTask } from \"../../Redux/ToDo/ToDoActions\";\r\n\r\nfunction Task({ title, done, listId, taskId, checkTask }) {\r\n  const taskCheckHandler = () => {\r\n    checkTask(listId, taskId);\r\n  };\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemIcon>\r\n        <Checkbox checked={done} onChange={taskCheckHandler} />\r\n      </ListItemIcon>\r\n      <ListItemText>{title}</ListItemText>\r\n    </ListItem>\r\n  );\r\n}\r\nexport default connect(null, { checkTask })(Task);\r\n","import types from \"./actionTypes\";\r\n\r\nexport const setUsername = (username) => ({\r\n    type: types.SET_USERNAME,\r\n    payload: username,\r\n});\r\n\r\nexport const checkTask = (listId, taskId) => ({\r\n    type: types.CHECK_TASK,\r\n    payload: { listId, taskId },\r\n});\r\n\r\nexport const addList = (newList) => ({\r\n    type: types.ADD_LIST,\r\n    payload: newList,\r\n});\r\n\r\nexport const deleteList = (listId) => ({\r\n    type: types.DELETE_LIST,\r\n    payload: listId,\r\n});\r\n\r\nexport const updateList = (listId, newList) => ({\r\n    type: types.UPDATE_LIST,\r\n    payload: { listId, newList },\r\n});","import React, { useState } from \"react\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { connect } from \"react-redux\";\r\nimport Task from \"../Task/Task\";\r\nimport { deleteList } from \"../../Redux/ToDo/ToDoActions\";\r\n\r\nfunction ToDo({ list, history, deleteList }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const editButtonHandler = () => {\r\n    history.push({\r\n      pathname: `/update/${list.id}`,\r\n      state: list,\r\n    });\r\n  };\r\n\r\n  const deleteButtonHandler = () => {\r\n    deleteList(list.id);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title={list.listTitle}\r\n        action={\r\n          <>\r\n            <IconButton onClick={deleteButtonHandler}>\r\n              <DeleteIcon color=\"error\" />\r\n            </IconButton>\r\n            <IconButton onClick={editButtonHandler}>\r\n              <EditIcon color=\"primary\" />\r\n            </IconButton>\r\n            <IconButton onClick={() => setOpen(!open)} aria-label=\"collapse\">\r\n              {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n      <Collapse in={open}>\r\n        {list.tasks.map((task) => (\r\n          <Task key={task.id} title={task.title} done={task.done} listId={list.id} taskId={task.id} />\r\n        ))}\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deleteList })(ToDo);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles({\r\n  outline: {\r\n    outline: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction AddTodo() {\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <Link to=\"/add\">\r\n      <Fab className={classes.outline} color=\"primary\" aria-label=\"add\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ToDo from \"../../Components/ToDo/ToDo\";\r\nimport AddTodo from \"../../Components/AddTodo/AddTodo\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Start.scss\";\r\n\r\nfunction Start({ history }) {\r\n  const lists = useSelector((state) => state.ToDo.lists);\r\n\r\n  return (\r\n    <CSSTransition appear in classNames=\"page-transition\" timeout={500}>\r\n    <main>\r\n      <List data-aos={\"fade-right\"}>\r\n        {lists.map((list) => (\r\n          <ToDo key={list.id} list={list} history={history} />\r\n        ))}\r\n      </List>\r\n      <AddTodo className=\"start-list\"/>\r\n    </main>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport uniqid from \"uniqid\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { addList } from \"../../Redux/ToDo/ToDoActions\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"2rem\",\r\n    borderRadius: \"0.7rem\",\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontFamily: `'Yekan !important'`,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundImage: \"linear-gradient(to right, #cb51fe 10%, #4d91df 100%)\",\r\n    fontFamily: `'Yekan !important'`,\r\n  },\r\n  input: {\r\n    width: \"300px\",\r\n    margin: \"2rem 0\",\r\n    backgroundColor: \"transparent\",\r\n    fontFamily: `'Yekan !important'`,\r\n  },\r\n  link: {\r\n    textDecoration: \"none !important\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  button: {\r\n    margin: \"1rem\",\r\n    backgroundImage: \"linear-gradient(to right, #fb80e2 10%, #64e4ef 100%)\",\r\n    color: \"white\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  background: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n});\r\n\r\nfunction NewFrom({ addList }) {\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [tasks, setTasks] = useState([\"\"]);\r\n\r\n  const taskChangeHandler = (event, index) => {\r\n    const newTasks = [...tasks];\r\n    newTasks[index] = event.target.value;\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    const newList = {\r\n      id: uniqid(),\r\n      listTitle: title,\r\n      tasks: tasks.map((item) => ({ id: uniqid(), title: item, done: false })),\r\n    };\r\n    addList(newList);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Card data-aos={\"fade-right\"} className={classes.form}>\r\n      <Box className={classes.root}>\r\n        <Grid className={classes.form} container>\r\n          <Box>\r\n            <Grid className={classes.background} item xs={12}>\r\n              <TextField className={classes.input} label=\"List Title\" variant=\"outlined\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n        <Grid className={classes.form} container>\r\n          {tasks.map((task, index) => (\r\n            <Grid className={classes.background} item key={index} xs={12}>\r\n              <TextField\r\n                className={classes.input}\r\n                label={`task ${index + 1}`}\r\n                variant=\"outlined\"\r\n                value={task}\r\n                onChange={(e) => taskChangeHandler(e, index)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Grid className={classes.background} item xs={12}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              <Button className={classes.button} variant=\"contained\" color=\"secondary\">\r\n                cancel\r\n              </Button>\r\n            </Link>\r\n            <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={submitHandler}>\r\n              submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default connect(null, { addList })(NewFrom);\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { updateList } from \"../../Redux/ToDo/ToDoActions\";\r\n// import { CSSTransition } from \"react-transition-group\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"1rem\",\r\n    borderRadius: \"0.7rem\",\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n        flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundImage: \"linear-gradient(to right, #cb51fe 10%, #4d91df 100%)\",\r\n  },\r\n  input: {\r\n    width: \"300px\",\r\n    margin: \"2rem 0\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none !important\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  button: {\r\n    margin: \"1rem\",\r\n    backgroundImage: \"linear-gradient(to right, #fb80e2 10%, #64e4ef 100%)\",\r\n    color: \"white\",\r\n    outline: \"none\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  background:{\r\n    backgroundColor: \"transparent\",\r\n  },\r\n});\r\n\r\nfunction EditForm({ location, updateList }) {\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n\r\n  const [title, setTitle] = useState(location.state.listTitle);\r\n  const [tasks, setTasks] = useState(location.state.tasks);\r\n\r\n  const taskChangeHandler = (event, index) => {\r\n    const newTasks = [...tasks];\r\n    newTasks[index].title = event.target.value;\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    const newList = {\r\n      id: location.state.id,\r\n      listTitle: title,\r\n      tasks: tasks,\r\n    };\r\n    updateList(location.state.id, newList);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Box data-aos={\"fade-left\"} className={classes.root}>\r\n      <Grid className={classes.form} container>\r\n        <Box>\r\n          <Grid className={classes.background} item xs={12}>\r\n            <TextField className={classes.input} label=\"List Title\" variant=\"outlined\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n          </Grid>\r\n        </Box>\r\n      </Grid>\r\n      <Grid className={classes.form} container>\r\n        {tasks.map((task, index) => (\r\n          <Grid className={classes.background} item key={index} xs={12}>\r\n            <TextField\r\n              className={classes.input}\r\n              label={`task ${index + 1}`}\r\n              variant=\"outlined\"\r\n              value={task.title}\r\n              onChange={(e) => taskChangeHandler(e, index)}\r\n            />\r\n            </Grid>\r\n        ))}\r\n        <Grid className={classes.background} item xs={12}>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <Button className={classes.button} variant=\"contained\" color=\"secondary\">\r\n              cancel\r\n            </Button>\r\n          </Link>\r\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={submitHandler}>\r\n            submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default connect(null, { updateList })(EditForm);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n    spacing: 2,\r\n    palette: {\r\n        primary: {\r\n            main: \"#00f7c6\",\r\n        },\r\n        secondary: {\r\n            main: \"#eff700\",\r\n        },\r\n        error: {\r\n            main: \"#00f7c6\",\r\n        },\r\n        info: {\r\n            main: \"#CDE0DE\",\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiPaper: {\r\n            root: {\r\n                backgroundImage: \"linear-gradient(to right, #cb51fe 10%, #4d91df 100%)\",\r\n                color: \"white\",\r\n                border: \"1px solid white\",\r\n            },\r\n        },\r\n        MuiTypography: {\r\n            colorTextSecondary: {\r\n                color: \"white\",\r\n            },\r\n        },\r\n        MuiContainer: {\r\n            root: {\r\n                backgroundColor: \"#5e005f\",\r\n                margin: \"0\",\r\n                padding: \"0.8rem\",\r\n                minHeight: \"100vh\",\r\n                fontFamily: `'Yekan'`,\r\n                position: \"relative\",\r\n            },\r\n        },\r\n        MuiGrid: {\r\n            root: {\r\n                backgroundColor: \"#c454fc\",\r\n            },\r\n        },\r\n        MuiInputBase: {\r\n            input: {\r\n                color: \"#FEFEFE\",\r\n                borderColor: \"#FEFEFE\",\r\n            },\r\n        },\r\n        MuiInputLabel: {\r\n            root: {\r\n                color: \"#ccc\",\r\n            },\r\n        },\r\n        MuiFab: {\r\n            root: {\r\n                position: \"absolute\",\r\n                bottom: 6,\r\n                right: 12,\r\n            },\r\n        },\r\n        MuiIconButton: {\r\n            label: {\r\n                color: \"#00f7c6\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport Start from \"./Containers/Start/Start\";\r\nimport NewFrom from \"./Containers/NewFrom/NewForm\";\r\nimport EditForm from \"./Containers/EditForm/EditForm\";\r\nimport theme from \"./themes/theme\";\r\n\r\nfunction App() {\r\n\r\n   return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container data-aos=\"fade-left\">\r\n        <Header data-aos=\"fade-right\"/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Start} />\r\n          <Route path=\"/add\" component={NewFrom} />\r\n          <Route exact path=\"/update/:listId\" component={EditForm} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import uniqid from \"uniqid\";\r\n\r\nimport types from \"./actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n    username: null,\r\n    lists: [{\r\n        id: uniqid(),\r\n        listTitle: \"Starter List\",\r\n        tasks: [\r\n            { id: uniqid(), title: \"first task\", done: false },\r\n            { id: uniqid(), title: \"second task\", done: false },\r\n        ],\r\n    }, ],\r\n};\r\n\r\nconst ToDoReducer = (currentState = INITIAL_STATE, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case types.SET_USERNAME:\r\n            return {\r\n                ...currentState,\r\n                username: payload,\r\n            };\r\n\r\n        case types.CHECK_TASK:\r\n            return {\r\n                ...currentState,\r\n                lists: currentState.lists.map((item) => {\r\n                    return item.id !== payload.listId ?\r\n                        item :\r\n                        {\r\n                            ...item,\r\n                            tasks: item.tasks.map((task) => {\r\n                                return task.id !== payload.taskId ? task : { id: task.id, title: task.title, done: !task.done };\r\n                            }),\r\n                        };\r\n                }),\r\n            };\r\n\r\n        case types.DELETE_LIST:\r\n            return {\r\n                ...currentState,\r\n                lists: currentState.lists.filter((item) => item.id !== payload),\r\n            };\r\n\r\n        case types.ADD_LIST:\r\n            return {\r\n                ...currentState,\r\n                lists: [payload, ...currentState.lists],\r\n            };\r\n\r\n        case types.UPDATE_LIST:\r\n            return {\r\n                ...currentState,\r\n                lists: currentState.lists.map((item) => (item.id !== payload.listId ? item : payload.newList)),\r\n            };\r\n\r\n        default:\r\n            return currentState;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;","import types from \"./actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  darkMode: false,\r\n};\r\n\r\nconst ThemeReducer = (currentState = INITIAL_STATE, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.CHANGE_THEME:\r\n      return {\r\n        ...currentState,\r\n        darkMode: !currentState.darkMode,\r\n      };\r\n\r\n    default:\r\n      return currentState;\r\n  }\r\n};\r\n\r\nexport default ThemeReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport ToDoReducer from \"./ToDo/ToDoReducer\";\r\nimport ThemeReducer from \"./Theme/ThemeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  ToDo: ToDoReducer,\r\n  Theme: ThemeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middleWares = [logger];\r\n\r\nconst persistConfig = {\r\n  key: \"todoappdata\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(persistedReducer, applyMiddleware(...middleWares));\r\n\r\nexport default store;\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport store from \"./Redux/store\";\r\nimport { persistor } from \"./Redux/store\";\r\nimport \"./index.css\";\r\nimport \"./reboot.scss\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.215b0a5d.png\";"],"sourceRoot":""}